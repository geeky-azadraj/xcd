/* tslint:disable */
/* eslint-disable */
/**
 * XCD APIs
 * API documentation for the backend services of XCD
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PrimarySupportContactDto } from './PrimarySupportContactDto';
import {
    PrimarySupportContactDtoFromJSON,
    PrimarySupportContactDtoFromJSONTyped,
    PrimarySupportContactDtoToJSON,
} from './PrimarySupportContactDto';
import type { EventVenueDto } from './EventVenueDto';
import {
    EventVenueDtoFromJSON,
    EventVenueDtoFromJSONTyped,
    EventVenueDtoToJSON,
} from './EventVenueDto';

/**
 * 
 * @export
 * @interface CreateEventDto
 */
export interface CreateEventDto {
    /**
     * Title of the event
     * @type {string}
     * @memberof CreateEventDto
     */
    eventTitle: string;
    /**
     * Start date of the event
     * @type {Date}
     * @memberof CreateEventDto
     */
    eventStartDate: Date;
    /**
     * End date of the event
     * @type {Date}
     * @memberof CreateEventDto
     */
    eventEndDate: Date;
    /**
     * Currency for the event
     * @type {string}
     * @memberof CreateEventDto
     */
    currency: string;
    /**
     * Start date for booking
     * @type {Date}
     * @memberof CreateEventDto
     */
    bookingStartDate: Date;
    /**
     * End date for booking
     * @type {Date}
     * @memberof CreateEventDto
     */
    bookingEndDate: Date;
    /**
     * Event venue information
     * @type {EventVenueDto}
     * @memberof CreateEventDto
     */
    eventVenue: EventVenueDto;
    /**
     * Event logo URL
     * @type {string}
     * @memberof CreateEventDto
     */
    eventLogo: string;
    /**
     * Primary support contact information
     * @type {PrimarySupportContactDto}
     * @memberof CreateEventDto
     */
    primarySupportContact: PrimarySupportContactDto;
}

/**
 * Check if a given object implements the CreateEventDto interface.
 */
export function instanceOfCreateEventDto(value: object): value is CreateEventDto {
    if (!('eventTitle' in value) || value['eventTitle'] === undefined) return false;
    if (!('eventStartDate' in value) || value['eventStartDate'] === undefined) return false;
    if (!('eventEndDate' in value) || value['eventEndDate'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('bookingStartDate' in value) || value['bookingStartDate'] === undefined) return false;
    if (!('bookingEndDate' in value) || value['bookingEndDate'] === undefined) return false;
    if (!('eventVenue' in value) || value['eventVenue'] === undefined) return false;
    if (!('eventLogo' in value) || value['eventLogo'] === undefined) return false;
    if (!('primarySupportContact' in value) || value['primarySupportContact'] === undefined) return false;
    return true;
}

export function CreateEventDtoFromJSON(json: any): CreateEventDto {
    return CreateEventDtoFromJSONTyped(json, false);
}

export function CreateEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'eventTitle': json['eventTitle'],
        'eventStartDate': (new Date(json['eventStartDate'])),
        'eventEndDate': (new Date(json['eventEndDate'])),
        'currency': json['currency'],
        'bookingStartDate': (new Date(json['bookingStartDate'])),
        'bookingEndDate': (new Date(json['bookingEndDate'])),
        'eventVenue': EventVenueDtoFromJSON(json['eventVenue']),
        'eventLogo': json['eventLogo'],
        'primarySupportContact': PrimarySupportContactDtoFromJSON(json['primarySupportContact']),
    };
}

export function CreateEventDtoToJSON(value?: CreateEventDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'eventTitle': value['eventTitle'],
        'eventStartDate': ((value['eventStartDate']).toISOString().substring(0,10)),
        'eventEndDate': ((value['eventEndDate']).toISOString().substring(0,10)),
        'currency': value['currency'],
        'bookingStartDate': ((value['bookingStartDate']).toISOString().substring(0,10)),
        'bookingEndDate': ((value['bookingEndDate']).toISOString().substring(0,10)),
        'eventVenue': EventVenueDtoToJSON(value['eventVenue']),
        'eventLogo': value['eventLogo'],
        'primarySupportContact': PrimarySupportContactDtoToJSON(value['primarySupportContact']),
    };
}

