/* tslint:disable */
/* eslint-disable */
/**
 * XCD APIs
 * API documentation for the backend services of XCD
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventListItemDto
 */
export interface EventListItemDto {
    /**
     * Event logo URL
     * @type {string}
     * @memberof EventListItemDto
     */
    eventLogo: string;
    /**
     * Name of the event
     * @type {string}
     * @memberof EventListItemDto
     */
    eventName: string;
    /**
     * Type of the event
     * @type {string}
     * @memberof EventListItemDto
     */
    eventType: string;
    /**
     * Start date of the event
     * @type {Date}
     * @memberof EventListItemDto
     */
    eventStartDate: Date;
    /**
     * End date of the event
     * @type {Date}
     * @memberof EventListItemDto
     */
    eventEndDate: Date;
    /**
     * Status of the event
     * @type {string}
     * @memberof EventListItemDto
     */
    status: EventListItemDtoStatusEnum;
}


/**
 * @export
 */
export const EventListItemDtoStatusEnum = {
    Active: 'active',
    Inactive: 'inactive'
} as const;
export type EventListItemDtoStatusEnum = typeof EventListItemDtoStatusEnum[keyof typeof EventListItemDtoStatusEnum];


/**
 * Check if a given object implements the EventListItemDto interface.
 */
export function instanceOfEventListItemDto(value: object): value is EventListItemDto {
    if (!('eventLogo' in value) || value['eventLogo'] === undefined) return false;
    if (!('eventName' in value) || value['eventName'] === undefined) return false;
    if (!('eventType' in value) || value['eventType'] === undefined) return false;
    if (!('eventStartDate' in value) || value['eventStartDate'] === undefined) return false;
    if (!('eventEndDate' in value) || value['eventEndDate'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function EventListItemDtoFromJSON(json: any): EventListItemDto {
    return EventListItemDtoFromJSONTyped(json, false);
}

export function EventListItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventListItemDto {
    if (json == null) {
        return json;
    }
    return {
        
        'eventLogo': json['eventLogo'],
        'eventName': json['eventName'],
        'eventType': json['eventType'],
        'eventStartDate': (new Date(json['eventStartDate'])),
        'eventEndDate': (new Date(json['eventEndDate'])),
        'status': json['status'],
    };
}

export function EventListItemDtoToJSON(value?: EventListItemDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'eventLogo': value['eventLogo'],
        'eventName': value['eventName'],
        'eventType': value['eventType'],
        'eventStartDate': ((value['eventStartDate']).toISOString().substring(0,10)),
        'eventEndDate': ((value['eventEndDate']).toISOString().substring(0,10)),
        'status': value['status'],
    };
}

