/* tslint:disable */
/* eslint-disable */
/**
 * XCD APIs
 * API documentation for the backend services of XCD
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlaceResult
 */
export interface PlaceResult {
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    country: string;
    /**
     * 
     * @type {number}
     * @memberof PlaceResult
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof PlaceResult
     */
    longitude: number;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    suburb: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    postalCode: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    state: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    streetAddress: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    formattedAddress: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResult
     */
    placeId: string;
}

/**
 * Check if a given object implements the PlaceResult interface.
 */
export function instanceOfPlaceResult(value: object): value is PlaceResult {
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('suburb' in value) || value['suburb'] === undefined) return false;
    if (!('postalCode' in value) || value['postalCode'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('streetAddress' in value) || value['streetAddress'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('formattedAddress' in value) || value['formattedAddress'] === undefined) return false;
    if (!('placeId' in value) || value['placeId'] === undefined) return false;
    return true;
}

export function PlaceResultFromJSON(json: any): PlaceResult {
    return PlaceResultFromJSONTyped(json, false);
}

export function PlaceResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaceResult {
    if (json == null) {
        return json;
    }
    return {
        
        'city': json['city'],
        'country': json['country'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'suburb': json['suburb'],
        'postalCode': json['postalCode'],
        'state': json['state'],
        'streetAddress': json['streetAddress'],
        'name': json['name'],
        'formattedAddress': json['formattedAddress'],
        'placeId': json['placeId'],
    };
}

export function PlaceResultToJSON(value?: PlaceResult | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'city': value['city'],
        'country': value['country'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'suburb': value['suburb'],
        'postalCode': value['postalCode'],
        'state': value['state'],
        'streetAddress': value['streetAddress'],
        'name': value['name'],
        'formattedAddress': value['formattedAddress'],
        'placeId': value['placeId'],
    };
}

